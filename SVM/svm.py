# -*- coding: utf-8 -*-
"""SVM_|_FIN_9891.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l8hEg50nZ517kocEF2fVozGVNZsFvn9j
"""

from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

import pandas as pd
import numpy as np

import warnings
warnings.filterwarnings("ignore")

df = pd.read_csv('/content/sample_data/CS.csv')

df['Date'] = pd.to_datetime(df['Date'])

df['Indicator1'] = df.Open - df.Close
df['Indicator2'] = df.High - df.Low

y = np.where(df['Adj Close'].shift(-1) > df['Adj Close'], 1, 0)
df['Buy/Sell'] = y.tolist()

#Split by date
start = '2014'
mid = '2019'
end = '2023'

#Training Sets
filter = (df['Date'] > start) & (df['Date'] < mid)
df1 = df.loc[filter]
X_train = df1[['Indicator1', 'Indicator2']]

filter2 = (df['Date'] > start) & (df['Date'] < mid)
df2 = df.loc[filter2]
Y_train = df2[['Buy/Sell']]

#Testing Sets
filter3 = (df['Date'] > mid) & (df['Date'] < end)
df3 = df.loc[filter3]
X_test = df3[['Indicator1', 'Indicator2']]

filter4 = (df['Date'] > mid) & (df['Date'] < end)
df4 = df.loc[filter4]
Y_test = df4[['Buy/Sell']]

#ML Model
svc=SVC()
cls = svc.fit(X_train, Y_train)

#Prediction
Y_pred = cls.predict(X_test)

#Accuracy
accuracy_score(Y_test, Y_pred)

Y_pred

np.savetxt("test3.csv", Y_pred, delimiter=",")

